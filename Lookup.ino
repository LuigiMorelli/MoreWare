/*
  Lookup: Questo programma esegue una serie di calcoli CPU-intensive
          per fornire un benchmark tra l'utilizzo di pesanti funzioni 
          e l'utilizzo di valori precalcolati da tabelle di riferimento.
 */

// Commentando questa linea si utilizza la funzione matematica classica.
#define USA_RIFERIMENTO

// Commentando questa linea verranno eseguiti calcoli 
// sui quadrati anzich√© sui logaritmi.
#define USA_LOGARITMO

// Questa definizione consente la stampa 
// del benchmark sul serial monitor.
#define MISURA

#ifdef MISURA
  uint32_t StartTime, CurrentTime;
#endif

// Tabella di riferimento per il logaritmo in base 10 da 0 a 255.
const double log_LUT[256]={ 1.0E-30,0.000000,0.693147,1.098612,1.386294,
1.609438,1.791759,1.945910,2.079442,2.197225,2.302585,2.397895,2.484907,
2.564949,2.639057,2.708050,2.772589,2.833213,2.890372,2.944439,2.995732,
3.044522,3.091042,3.135494,3.178054,3.218876,3.258097,3.295837,3.332205,
3.367296,3.401197,3.433987,3.465736,3.496508,3.526361,3.555348,3.583519,
3.610918,3.637586,3.663562,3.688879,3.713572,3.737670,3.761200,3.784190,
3.806662,3.828641,3.850148,3.871201,3.891820,3.912023,3.931826,3.951244,
3.970292,3.988984,4.007333,4.025352,4.043051,4.060443,4.077537,4.094345,
4.110874,4.127134,4.143135,4.158883,4.174387,4.189655,4.204693,4.219508,
4.234107,4.248495,4.262680,4.276666,4.290459,4.304065,4.317488,4.330733,
4.343805,4.356709,4.369448,4.382027,4.394449,4.406719,4.418841,4.430817,
4.442651,4.454347,4.465908,4.477337,4.488636,4.499810,4.510860,4.521789,
4.532599,4.543295,4.553877,4.564348,4.574711,4.584967,4.595120,4.605170,
4.615121,4.624973,4.634729,4.644391,4.653960,4.663439,4.672829,4.682131,
4.691348,4.700480,4.709530,4.718499,4.727388,4.736198,4.744932,4.753590,
4.762174,4.770685,4.779123,4.787492,4.795791,4.804021,4.812184,4.820282,
4.828314,4.836282,4.844187,4.852030,4.859812,4.867534,4.875197,4.882802,
4.890349,4.897840,4.905275,4.912655,4.919981,4.927254,4.934474,4.941642,
4.948760,4.955827,4.962845,4.969813,4.976734,4.983607,4.990433,4.997212,
5.003946,5.010635,5.017280,5.023881,5.030438,5.036953,5.043425,5.049856,
5.056246,5.062595,5.068904,5.075174,5.081404,5.087596,5.093750,5.099866,
5.105945,5.111988,5.117994,5.123964,5.129899,5.135798,5.141664,5.147494,
5.153292,5.159055,5.164786,5.170484,5.176150,5.181784,5.187386,5.192957,
5.198497,5.204007,5.209486,5.214936,5.220356,5.225747,5.231109,5.236442,
5.241747,5.247024,5.252273,5.257495,5.262690,5.267858,5.273000,5.278115,
5.283204,5.288267,5.293305,5.298317,5.303305,5.308268,5.313206,5.318120,
5.323010,5.327876,5.332719,5.337538,5.342334,5.347108,5.351858,5.356586,
5.361292,5.365976,5.370638,5.375278,5.379897,5.384495,5.389072,5.393628,
5.398163,5.402677,5.407172,5.411646,5.416100,5.420535,5.424950,5.429346,
5.433722,5.438079,5.442418,5.446737,5.451038,5.455321,5.459586,5.463832,
5.468060,5.472271,5.476464,5.480639,5.484797,5.488938,5.493061,5.497168,
5.501258,5.505332,5.509388,5.513429,5.517453,5.521461,5.525453,5.529429,
5.533389,5.537334,5.541264};

// Tabella di riferimento per il quadrato di x da 0 a 255.
double sq_LUT[256]={0.000000,1.000000,1.414214,1.732051,2.000000,
 2.236068,2.449490,2.645751,2.828427,3.000000,3.162278,3.316625,3.464102,
 3.605551,3.741657,3.872983,4.000000,4.123106,4.242640,4.358899,4.472136,
 4.582576,4.690416,4.795832,4.898980,5.000000,5.099020,5.196152,5.291502,
 5.385165,5.477226,5.567764,5.656854,5.744563,5.830952,5.916080,6.000000,
 6.082763,6.164414,6.244998,6.324555,6.403124,6.480741,6.557438,6.633250,
 6.708204,6.782330,6.855655,6.928203,7.000000,7.071068,7.141428,7.211102,
 7.280110,7.348469,7.416198,7.483315,7.549834,7.615773,7.681146,7.745967,
 7.810250,7.874008,7.937254,8.000000,8.062258,8.124039,8.185353,8.246212,
 8.306624,8.366600,8.426150,8.485281,8.544004,8.602326,8.660255,8.717799,
 8.774965,8.831761,8.888195,8.944272,9.000000,9.055386,9.110434,9.165152,
 9.219545,9.273619,9.327380,9.380832,9.433981,9.486833,9.539393,9.591664,
 9.643651,9.695361,9.746795,9.797960,9.848858,9.899496,9.949874,10.000000,
10.049876,10.099505,10.148892,10.198040,10.246952,10.295631,10.344080,10.392305,
10.440307,10.488089,10.535655,10.583005,10.630146,10.677079,10.723806,10.770330,
10.816655,10.862781,10.908713,10.954452,11.000000,11.045361,11.090537,11.135529,
11.180340,11.224972,11.269428,11.313709,11.357817,11.401755,11.445524,11.489126,
11.532563,11.575838,11.618950,11.661904,11.704700,11.747341,11.789827,11.832160,
11.874342,11.916376,11.958261,12.000000,12.041595,12.083046,12.124356,12.165526,
12.206556,12.247449,12.288207,12.328828,12.369318,12.409674,12.449900,12.489996,
12.529965,12.569806,12.609520,12.649111,12.688578,12.727923,12.767146,12.806249,
12.845233,12.884099,12.922848,12.961482,13.000000,13.038405,13.076697,13.114877,
13.152947,13.190906,13.228757,13.266500,13.304135,13.341665,13.379089,13.416408,
13.453624,13.490738,13.527750,13.564661,13.601471,13.638182,13.674795,13.711310,
13.747728,13.784049,13.820276,13.856407,13.892444,13.928389,13.964241,14.000000,
14.035669,14.071248,14.106737,14.142136,14.177448,14.212671,14.247807,14.282857,
14.317822,14.352701,14.387495,14.422205,14.456832,14.491377,14.525839,14.560220,
14.594520,14.628739,14.662878,14.696939,14.730920,14.764823,14.798649,14.832397,
14.866069,14.899665,14.933185,14.966630,15.000000,15.033297,15.066519,15.099669,
15.132746,15.165751,15.198684,15.231547,15.264338,15.297059,15.329710,15.362292,
15.394804,15.427249,15.459626,15.491934,15.524175,15.556349,15.588458,15.620500,
15.652477,15.684388,15.716234,15.748016,15.779734,15.811388,15.842980,15.874508,
15.905974,15.937377};

double x=0.0;

void setup() { 
  Serial.begin(9600);  
}

void loop() {
  uint32_t  j=500;
  
  #ifdef MISURA
    StartTime = millis();
  #endif
  
  while(j--) 
    for(uint8_t i=0;i<255;i++)
    { // Chiama la funzione 255 volte, in base alla definizione delle costanti
      #ifdef USA_RIFERIMENTO
        #ifdef USA_LOGARITMO
          x=log_LUT[i];   // Utilizza la tabella di riferimento dei logaritmi
        #else
          x=sq_LUT[i];    // Utilizza la tabella di riferimento delle radici quadrate
        #endif
      #else
        #ifdef USA_LOGARITMO
          x=log(i);       // Utilizza la funzione Logaritmo della libreria math.h 
        #else
          x=sqrt(i);   // Utilizza la funzione SquareRoot della libreria math.h
        #endif
      #endif
    }

  #ifdef MISURA
    CurrentTime = millis();
    Serial.print("Impiegati ");
    Serial.print((float)(CurrentTime - StartTime)*0.001,3);
    Serial.print(" secondi\n");
  #endif
  
  // Dobbiamo "utilizzare" la variabile x
  x = x + 1;
}
